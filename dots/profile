# vi: filetype=sh
# From http://superuser.com/questions/183870/difference-between-bashrc-and-bash-profile/183980#183980
# ~/.profile is the place to put stuff that applies to your whole session,
# such as programs that you want to start when you log in (but not
# graphical programs, they go into a different file), and
# environment variable definitions.

# fix for QNAP devices - source this before appending any other PATH settings

# this will be removable after decommissioning the other NASs
if [ -f /Apps/opt/etc/profile ]; then
  . /Apps/opt/etc/profile
fi

# for the new NAS
if [ -f /opt/etc/profile ]; then
  . /opt/etc/profile
fi

set -o vi
export EDITOR=vim
export VISUAL=vim # crontab -e on qnap depends on VISUAL and apparently does not read EDITOR

# -------------------------------------------------------------------------
# Install npm packages globally without sudo on OS X and Linux:
# https://github.com/sindresorhus/guides/blob/master/npm-global-without-sudo.md
export NPM_PACKAGES="${HOME}/.npm-packages"
export NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"

# PATH
export PATH="$HOME/bin:$HOME/local/bin:$HOME/dotfiles/local/bin:$HOME/dotfiles/os/bin:$HOME/dotfiles/bin:$PATH"
export PATH="$NPM_PACKAGES/bin:$PATH"
export PATH="$HOME/.rvm/bin:$PATH"
export PATH="$PATH:$HOME/.yarn/bin"

# Use ignoreboth instead of ignoredups so that tmux-resurrect history save
# commands will not be saved. See
# https://github.com/tmux-plugins/tmux-resurrect
export HISTCONTROL=ignoreboth

# manpath is not available on QNAP, therefore we must check for it
which manpath >/dev/null 2>&1
if [ $? -eq 0 ]; then
  # Unset manpath so we can inherit from /etc/manpath via the `manpath`
  # command
  unset MANPATH # delete if MANPATH was already modified elsewhere
  MANPATH="$NPM_PACKAGES/share/man:$(manpath)"
fi

if [ -z "$BASH" ]; then
  if [ "`id -u`" -eq 0 ]; then
    export PS1='[\w] # '
  else
    export PS1='[\w] $ '
  fi
fi

# -------------------------------------------------------------------------
OS_SPECIFIC_PROFILE=~/dotfiles/os/dots/profile
if [ -f $OS_SPECIFIC_PROFILE ]; then
  source $OS_SPECIFIC_PROFILE
fi

HOST_SPECIFIC_PROFILE=~/dotfiles/local/dots/profile
if [ -f $HOST_SPECIFIC_PROFILE ]; then
  source $HOST_SPECIFIC_PROFILE
fi

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
