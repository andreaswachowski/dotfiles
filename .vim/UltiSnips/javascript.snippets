# Taken from https://raw.githubusercontent.com/mauroporrasp/vim-snippets/ee2f8f7fbbf28814bd074402eebbbcfaadcf88ac/snippets/javascript.es6.react.snippets, adapted for Ultisnips
# Also see https://github.com/honza/vim-snippets/pull/800

# Import only React
snippet ri1
import React from 'react'${0}
endsnippet

# Import both React and Component
snippet ri2
import React, { Component } from 'react'${0}
endsnippet

# React class
snippet rcla
class ${1:MyComponent} extends Component {
	render() {
		return (
			<div>
				${0}
			</div>
		)
	}
}
endsnippet

# React constructor
snippet rcon
constructor(props) {
	super(props)

	this.state = {
		${1:foo}: ${0:'foo'},
	}
}
endsnippet

# Presentational component
snippet rcom
(props) => {
return (
	<div>
		${0}
	</div>
)
}
endsnippet

# Lifecycle Methods
snippet rcdm
componentDidMount() {
	${0}
}
endsnippet

# State
snippet rtss
this.setState({
	${1:foo}: ${0:'foo'},
})
endsnippet

snippet rts
this.state.${0}
endsnippet

# Props
snippet rp
props.${0}
endsnippet

snippet rtp
this.props.${0}
endsnippet

# React Snippets are from http://courses.reactjsprogram.com/courses/redux-and-immutablejs/lectures/945035
# React Native Stateless Functional Component Skeleton
global !p
def react_classname(filename):
# Original (Sublime Text conformant) regexp to extract the class name: ${TM_FILENAME/(.?\w*)(?:\.\w+)*$/$1/g}
    return re.match(r'.*(?=\.)', fn).group()
endglobal

snippet rnccf "React Native Stateless Component"
import React, {PropTypes} from 'react';
import {View, StyleSheet, Text} from 'react-native';

${1:`!p snip.rv = react_classname(fn)`}.propTypes = {

};

export default function $1 (props) {
  return (
    ${0:<View>
      <Text>
        $1
      </Text>
    </View>}
  )
}

const styles = StyleSheet.create({

});
endsnippet

snippet rnccs "React Native Stateful Component"
import React, {PropTypes, Component} from 'react';
import {View, Text} from 'react-native';

export default class ${1:`!p snip.rv = react_classname(fn)`} extends Component {
  static propTypes = {}
  state = {}
  render () {
    return (
      ${0:<View>
        <Text>
          $1
        </Text>
      </View>}
    );
  }
}
endsnippet

snippet duck "Redux Module skeleton"
const initialState = {};

export default function ${1:`!p snip.rv = react_classname(fn)`} (state = initialState, action) {
  switch (action.type) {
    default :
      return state;
  }
endsnippet

snippet rc "Redux Connect skeleton"
import {bindActionCreators} from 'redux';
import {connect} from 'react-redux';
import {  } from 'components';

function mapStateToProps (state, props) {
  return {
  };
}

function mapDispatchToProps (dispatch, props) {
  return bindActionCreators( , dispatch);
}

export default connect(
  mapStateToProps,
  mapDispatchToProps
)
endsnippet

snippet rccs "React Stateful Component"
import React from 'react';

const ${1:`!p snip.rv = react_classname(fn)`} = React.createClass({
  render () {
    return (
      ${0:<div></div>}
    );
  }
});

export default $1;
endsnippet

snippet rccf "React Stateless Functional Component"
import React, {PropTypes} from 'react';

export default function ${1:`!p snip.rv = react_classname(fn)`} (props) {
  return (
    ${0:<div></div>}
  );
}
endsnippet
endsnippet
